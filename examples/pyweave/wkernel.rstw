=========
W kernels
=========

<<>>=
import numpy
import scipy
import scipy.special

from crocodile.clean import *
from crocodile.synthesis import *
from crocodile.simulate import *

from matplotlib import pylab

@

Example of the w-effect in the farfield, with reasonable choice of N,
which is NpixFF in wslicimg:
<<caption="W far-field">>=
ff=wkernff(256, 2*0.1, 1000)
pylab.matshow(ff.real) ; pylab.colorbar();  pylab.show()
@

And here is the corresponding w-kernel in the aperture field, i.e.,
the convolution kernel. It can be that the support of the kernel is
limited and is much less than the maximum possible 256 governed by the
size of the image, i.e., parameter N.
<<caption="W kernel">>=
af=pxoversample(ff, 256, 1, 127)
pylab.matshow(af[0][0].real) ; pylab.colorbar();  pylab.show()
@

Example of when w is too large for the chosen N. Note the aliasing
artifacts which are happening  because the pixels are too large:
<<caption="W far-field">>=
ff=wkernff(256, 0.1, 7000)
pylab.matshow(ff.real) ; pylab.colorbar();  pylab.show()
@

This is a zoom in at edge to show the effects better:
<<caption="W far-field, zoom into the edge of image">>=
pylab.matshow(ff.real[200:,200:]) ; pylab.colorbar();  pylab.show()
@

Here is the corresponding w-kernel in the aperture field, i.e., the
conovlution kernel. It can be seen that it does not fall of, and that
the size of the image is not sufficient to fully characterised the
convolution kernel.
<<caption="W kernel">>=
af=pxoversample(ff, 256, 1, 127)
pylab.matshow(af[0][0].real) ; pylab.colorbar();  pylab.show()
@

For this value of W we need higher N. Here is a full image:
<<caption="W far-field at high w but with correspondingly increased N">>=
ff=wkernff(256*8, 2*0.1, 7000)
pylab.matshow(ff.real) ; pylab.colorbar();  pylab.show()
@

Zoom in at edge to show the effect:
<<caption="W far-field, zoom into edge">>=
pylab.matshow(ff.real[200*8:,200*8:]) ; pylab.colorbar();  pylab.show()
@

Here is the corresponding w-kernel in the aperture field. It can be
seen that we now again have enough pixels to capture the support of
the w-kernel.
<<caption="W kernel">>=
af=pxoversample(ff, 256, 1, 257)
pylab.matshow(af[0][0].real) ; pylab.colorbar();  pylab.show()
@

